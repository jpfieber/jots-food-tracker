import * as esbuild from 'esbuild';
import { copyFile } from 'fs/promises';
import { fileURLToPath } from 'url';
import { dirname, resolve } from 'path';

const __dirname = dirname(fileURLToPath(import.meta.url));

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
If you want to view the source, visit the plugin's github repository
*/
`;

const prod = process.argv[2] === 'production';
const watchMode = process.argv.includes('--watch');

const context = await esbuild.context({
    banner: {
        js: banner,
    },
    entryPoints: ['src/main.ts'],
    bundle: true,
    external: ['obsidian'],
    format: 'cjs',
    target: 'es2018',
    logLevel: 'info',
    sourcemap: prod ? false : 'inline',
    minify: prod,
    treeShaking: true,
    outfile: 'dist/main.js',
    plugins: [{
        name: 'copy-styles',
        setup(build) {
            build.onEnd(async () => {
                try {
                    await copyFile(
                        resolve(__dirname, 'src/styles.css'),
                        resolve(__dirname, 'dist/styles.css')
                    );
                    console.log('styles.css copied successfully');
                } catch (err) {
                    console.error('Error copying styles.css:', err);
                }
            });
        }
    }]
});

if (watchMode) {
    await context.watch();
    console.log('Watching for changes...');
} else {
    await context.rebuild();
    await context.dispose();
    console.log('Build complete');
}